{"version":3,"sources":["Die.js","App.js","reportWebVitals.js","index.js"],"names":["Die","props","styles","backgroundColor","isHeld","className","style","onClick","holdDice","value","App","React","useState","allNewDice","dice","setDice","tenzies","setTenzies","rolls","setRolls","JSON","parse","localStorage","getItem","time","highscore","setHighscore","setTime","useStopwatch","autoStart","seconds","minutes","start","pause","reset","generateNewDie","Math","ceil","random","id","nanoid","newDice","i","push","useEffect","allHeld","every","die","firstValue","allSameValue","prevScore","setItem","stringify","diceElements","map","oldDice","prevrolls","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6b52abc1.chunk.js","sourcesContent":["import React from 'react';\n\nexport default function Die(props) {\n  const styles = {\n    backgroundColor: props.isHeld ? '#59E391' : 'white',\n  };\n  return (\n    <div className='die-face' style={styles} onClick={props.holdDice}>\n      <h2 className='die-num'>{props.value}</h2>\n    </div>\n  );\n}\n","import React from 'react';\nimport Die from './Die';\nimport { nanoid } from 'nanoid';\nimport { useStopwatch } from 'react-timer-hook';\nimport Confetti from 'react-confetti';\n\nexport default function App() {\n  const [dice, setDice] = React.useState(allNewDice());\n  const [tenzies, setTenzies] = React.useState(false);\n  const [rolls, setRolls] = React.useState(0);\n  const [highscore, setHighscore] = React.useState(\n    JSON.parse(localStorage.getItem('highscore')) || { rolls: 0, time: '' }\n  );\n  const [time, setTime] = React.useState('');\n  const { seconds, minutes, start, pause, reset } = useStopwatch({ autoStart: false });\n\n  React.useEffect(() => {\n    const allHeld = dice.every((die) => die.isHeld);\n    const firstValue = dice[0].value;\n    const allSameValue = dice.every((die) => die.value === firstValue);\n    if (allHeld && allSameValue) {\n      setTenzies(true);\n    }\n  }, [dice]);\n\n  React.useEffect(() => {\n    if (tenzies) {\n      pause();\n      setTime(`${minutes}:${seconds}`);\n\n      if ((rolls < highscore.rolls && time <= highscore.time) || highscore.rolls === 0) {\n        setHighscore((prevScore) => ({\n          ...prevScore,\n          rolls: rolls,\n          time: `${minutes}:${seconds}`,\n        }));\n      }\n    }\n  }, [tenzies, rolls, highscore, pause, minutes, seconds, time]);\n\n  React.useEffect(() => {\n    localStorage.setItem('highscore', JSON.stringify(highscore));\n  }, [highscore]);\n\n  function generateNewDie() {\n    return {\n      value: Math.ceil(Math.random() * 6),\n      isHeld: false,\n      id: nanoid(),\n    };\n  }\n\n  function allNewDice() {\n    const newDice = [];\n    for (let i = 0; i < 10; i++) {\n      newDice.push(generateNewDie());\n    }\n    return newDice;\n  }\n\n  function rollDice() {\n    if (rolls === 0) {\n      reset();\n      start();\n    }\n\n    if (!tenzies) {\n      setRolls((prevrolls) => prevrolls + 1);\n      setDice((oldDice) =>\n        oldDice.map((die) => {\n          return die.isHeld ? die : generateNewDie();\n        })\n      );\n    } else {\n      reset();\n      setTenzies(false);\n      setDice(allNewDice());\n      setRolls(0);\n    }\n  }\n\n  function holdDice(id) {\n    setDice((oldDice) =>\n      oldDice.map((die) => {\n        return die.id === id ? { ...die, isHeld: !die.isHeld } : die;\n      })\n    );\n  }\n\n  const diceElements = dice.map((die) => (\n    <Die\n      key={die.id}\n      value={die.value}\n      isHeld={die.isHeld}\n      holdDice={() => holdDice(die.id)}\n    />\n  ));\n\n  return (\n    <main>\n      <div className='stats'>\n        <div className='highscore'>\n          Highscore: {highscore.rolls} ({highscore.time})\n          <br />\n        </div>\n        <div className='currentScore'>\n          <span>\n            {rolls !== 0 ? `Time: ${minutes}:${seconds}` : '(pre-start thinking time)'}\n          </span>\n          <br />\n          Rolls: {rolls}\n        </div>\n      </div>\n      {tenzies && <Confetti />}\n      <h1 className='title'>Tenzies</h1>\n      <p className='instructions'>\n        Roll until all dice are the same. Click each die to freeze it at its current value\n        between rolls.\n      </p>\n      <div className='dice-container'>{diceElements}</div>\n      <button className='roll-dice' onClick={rollDice}>\n        {tenzies ? 'New Game' : 'Roll'}\n      </button>\n    </main>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}